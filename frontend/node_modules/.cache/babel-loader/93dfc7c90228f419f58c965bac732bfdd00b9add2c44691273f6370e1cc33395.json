{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aayush\\\\Documents\\\\FinApp\\\\frontend\\\\src\\\\Components\\\\CashFlow\\\\CashFlow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport { getCashFlow } from '../../api';\nimport Table from '../Table/Table';\nimport Spinner from '../Spinners/Spinners';\nimport { formatLargeMonetaryNumber } from \"../../Helpers/NumberFormatting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = [{\n  label: \"Date\",\n  render: company => company.date\n}, {\n  label: \"Operating Cashflow\",\n  render: company => formatLargeMonetaryNumber(company.operatingCashFlow)\n}, {\n  label: \"Investing Cashflow\",\n  render: company => formatLargeMonetaryNumber(company.netCashUsedForInvestingActivites)\n}, {\n  label: \"Financing Cashflow\",\n  render: company => formatLargeMonetaryNumber(company.netCashUsedProvidedByFinancingActivities)\n}, {\n  label: \"Cash At End of Period\",\n  render: company => formatLargeMonetaryNumber(company.cashAtEndOfPeriod)\n}, {\n  label: \"CapEX\",\n  render: company => formatLargeMonetaryNumber(company.capitalExpenditure)\n}, {\n  label: \"Issuance Of Stock\",\n  render: company => formatLargeMonetaryNumber(company.commonStockIssued)\n}, {\n  label: \"Free Cash Flow\",\n  render: company => formatLargeMonetaryNumber(company.freeCashFlow)\n}];\nconst CashFlow = props => {\n  _s();\n  const ticker = useOutletContext();\n  const [cashFlowData, setCashFlowData] = useState();\n  useEffect(() => {\n    const getRatios = async () => {\n      const result = await getCashFlow(ticker);\n      setCashFlowData(result.data);\n    };\n    getRatios();\n  }, []);\n  return cashFlowData ? /*#__PURE__*/_jsxDEV(Table, {\n    config: config,\n    data: cashFlowData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 6\n  }, this);\n};\n_s(CashFlow, \"4D4dr0boIxFfptZ26f3gXZFAsBo=\", false, function () {\n  return [useOutletContext];\n});\n_c = CashFlow;\nexport default CashFlow;\nvar _c;\n$RefreshReg$(_c, \"CashFlow\");","map":{"version":3,"names":["React","useEffect","useState","useOutletContext","getCashFlow","Table","Spinner","formatLargeMonetaryNumber","jsxDEV","_jsxDEV","config","label","render","company","date","operatingCashFlow","netCashUsedForInvestingActivites","netCashUsedProvidedByFinancingActivities","cashAtEndOfPeriod","capitalExpenditure","commonStockIssued","freeCashFlow","CashFlow","props","_s","ticker","cashFlowData","setCashFlowData","getRatios","result","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aayush/Documents/FinApp/frontend/src/Components/CashFlow/CashFlow.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { CompanyCashFlow, CompanyKeyMetrics } from '../../company';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { getCashFlow, getKeyMetrics } from '../../api';\r\nimport RatioList from '../RatioList/RatioList';\r\nimport Table from '../Table/Table';\r\nimport Spinner from '../Spinners/Spinners';\r\nimport {\r\n  formatLargeMonetaryNumber,\r\n  formatRatio,\r\n} from \"../../Helpers/NumberFormatting\";\r\n\r\ntype Props = {}\r\n\r\nconst config = [\r\n  {\r\n    label: \"Date\",\r\n    render: (company: CompanyCashFlow) => company.date,\r\n  },\r\n  {\r\n    label: \"Operating Cashflow\",\r\n    render: (company: CompanyCashFlow) => formatLargeMonetaryNumber(company.operatingCashFlow),\r\n  },\r\n  {\r\n    label: \"Investing Cashflow\",\r\n    render: (company: CompanyCashFlow) =>\r\n      formatLargeMonetaryNumber(company.netCashUsedForInvestingActivites),\r\n  },\r\n  {\r\n    label: \"Financing Cashflow\",\r\n    render: (company: CompanyCashFlow) =>\r\n      formatLargeMonetaryNumber(company.netCashUsedProvidedByFinancingActivities),\r\n  },\r\n  {\r\n    label: \"Cash At End of Period\",\r\n    render: (company: CompanyCashFlow) => formatLargeMonetaryNumber(company.cashAtEndOfPeriod),\r\n  },\r\n  {\r\n    label: \"CapEX\",\r\n    render: (company: CompanyCashFlow) => formatLargeMonetaryNumber(company.capitalExpenditure),\r\n  },\r\n  {\r\n    label: \"Issuance Of Stock\",\r\n    render: (company: CompanyCashFlow) => formatLargeMonetaryNumber(company.commonStockIssued),\r\n  },\r\n  {\r\n    label: \"Free Cash Flow\",\r\n    render: (company: CompanyCashFlow) => formatLargeMonetaryNumber(company.freeCashFlow),\r\n  },\r\n];\r\n\r\nconst CashFlow = (props: Props) => {\r\n  const ticker = useOutletContext<string>();\r\n  const [cashFlowData, setCashFlowData] = useState<CompanyCashFlow[]>();\r\n  useEffect(() => {\r\n    const getRatios = async () => {\r\n      const result = await getCashFlow(ticker);\r\n      setCashFlowData(result!.data);\r\n    };\r\n    getRatios();\r\n  }, []);\r\n  return cashFlowData ? (\r\n    <Table config={config} data={cashFlowData}></Table>\r\n  ) : (\r\n     <Spinner/> \r\n  );\r\n};\r\n\r\nexport default CashFlow"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,WAAW,QAAuB,WAAW;AAEtD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SACEC,yBAAyB,QAEpB,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxC,MAAMC,MAAM,GAAG,CACb;EACEC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACC;AAChD,CAAC,EACD;EACEH,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAAKN,yBAAyB,CAACM,OAAO,CAACE,iBAAiB;AAC3F,CAAC,EACD;EACEJ,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAC/BN,yBAAyB,CAACM,OAAO,CAACG,gCAAgC;AACtE,CAAC,EACD;EACEL,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAC/BN,yBAAyB,CAACM,OAAO,CAACI,wCAAwC;AAC9E,CAAC,EACD;EACEN,KAAK,EAAE,uBAAuB;EAC9BC,MAAM,EAAGC,OAAwB,IAAKN,yBAAyB,CAACM,OAAO,CAACK,iBAAiB;AAC3F,CAAC,EACD;EACEP,KAAK,EAAE,OAAO;EACdC,MAAM,EAAGC,OAAwB,IAAKN,yBAAyB,CAACM,OAAO,CAACM,kBAAkB;AAC5F,CAAC,EACD;EACER,KAAK,EAAE,mBAAmB;EAC1BC,MAAM,EAAGC,OAAwB,IAAKN,yBAAyB,CAACM,OAAO,CAACO,iBAAiB;AAC3F,CAAC,EACD;EACET,KAAK,EAAE,gBAAgB;EACvBC,MAAM,EAAGC,OAAwB,IAAKN,yBAAyB,CAACM,OAAO,CAACQ,YAAY;AACtF,CAAC,CACF;AAED,MAAMC,QAAQ,GAAIC,KAAY,IAAK;EAAAC,EAAA;EACjC,MAAMC,MAAM,GAAGtB,gBAAgB,CAAS,CAAC;EACzC,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAoB,CAAC;EACrED,SAAS,CAAC,MAAM;IACd,MAAM2B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,MAAM,GAAG,MAAMzB,WAAW,CAACqB,MAAM,CAAC;MACxCE,eAAe,CAACE,MAAM,CAAEC,IAAI,CAAC;IAC/B,CAAC;IACDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,OAAOF,YAAY,gBACjBjB,OAAA,CAACJ,KAAK;IAACK,MAAM,EAAEA,MAAO;IAACoB,IAAI,EAAEJ;EAAa;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,gBAElDzB,OAAA,CAACH,OAAO;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CACX;AACH,CAAC;AAACV,EAAA,CAfIF,QAAQ;EAAA,QACGnB,gBAAgB;AAAA;AAAAgC,EAAA,GAD3Bb,QAAQ;AAiBd,eAAeA,QAAQ;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}