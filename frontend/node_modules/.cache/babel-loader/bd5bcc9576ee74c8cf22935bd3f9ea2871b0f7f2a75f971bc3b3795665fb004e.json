{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aayush\\\\Documents\\\\FinApp\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport CardList from './Components/CardList/CardList';\nimport Search from './Components/Search/Search';\nimport { searchCompanies } from './api';\nimport ListPortfolio from './Components/Portfolio/ListPortfolio/ListPortfolio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [portfolioValues, setPortfolioValues] = useState([]);\n  const [searchResult, setSearchResult] = useState([]);\n  const [serverError, setServerError] = useState(null);\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n    console.log(e);\n  };\n  const onPortfolioCreate = e => {\n    e.preventDefault();\n    const exists = portfolioValues.find(value => value === e.target[0].value);\n    if (exists) return;\n    const updatePortfolio = [...portfolioValues, e.target[0].value];\n    setPortfolioValues(updatePortfolio);\n    console.log(e);\n  };\n  const onPortfolioDelete = e => {\n    e.preventDefault();\n    const removed = portfolioValues.filter(value => {\n      return value != e.target[0].value;\n    });\n    setPortfolioValues(removed);\n  };\n  const onSearchSubmit = async e => {\n    e.preventDefault();\n    const result = await searchCompanies(search);\n    if (typeof result === \"string\") {\n      setServerError(result);\n    } else if (Array.isArray(result.data)) {\n      setSearchResult(result.data);\n    }\n    console.log(searchResult);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchSubmit: onSearchSubmit,\n      search: search,\n      handleSearchChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListPortfolio, {\n      portfolioValues: portfolioValues,\n      onPortfolioDelete: onPortfolioDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      searchResults: searchResult,\n      onPortfolioCreate: onPortfolioCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Unable to connect to API \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"htQmLx9YUSQZQ6Vv+XWZHwncaZE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","CardList","Search","searchCompanies","ListPortfolio","jsxDEV","_jsxDEV","App","_s","search","setSearch","portfolioValues","setPortfolioValues","searchResult","setSearchResult","serverError","setServerError","handleSearchChange","e","target","value","console","log","onPortfolioCreate","preventDefault","exists","find","updatePortfolio","onPortfolioDelete","removed","filter","onSearchSubmit","result","Array","isArray","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchResults","_c","$RefreshReg$"],"sources":["C:/Users/Aayush/Documents/FinApp/frontend/src/App.tsx"],"sourcesContent":["\nimport { ChangeEvent, SyntheticEvent, useState } from 'react';\nimport './App.css';\nimport CardList from './Components/CardList/CardList';\nimport Search from './Components/Search/Search';\nimport { CompanySearch } from './company';\nimport { searchCompanies } from './api';\nimport ListPortfolio from './Components/Portfolio/ListPortfolio/ListPortfolio';\n\nfunction App() {\n\n    const[search, setSearch] = useState<string>(\"\");\n    const [portfolioValues, setPortfolioValues] = useState<string[]>([]);\n    const [searchResult, setSearchResult] = useState<CompanySearch[]>([]);\n    const[serverError, setServerError] = useState<string | null>(null); \n\n  const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n    console.log(e);\n  };\n\n  const onPortfolioCreate = (e: any) => {\n    e.preventDefault();\n    const exists = portfolioValues.find((value) => value === e.target[0].value);\n    if(exists) return;\n    const updatePortfolio = [...portfolioValues, e.target[0].value];\n    setPortfolioValues(updatePortfolio);\n    console.log(e)\n  }\n\n  const onPortfolioDelete = (e : any) => {\n    e.preventDefault();\n    const removed = portfolioValues.filter((value) => {\n      return value != e.target[0].value;\n    });\n    setPortfolioValues(removed);\n\n    };\n\n  const onSearchSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault();\n    const result = await searchCompanies(search);\n    if(typeof result === \"string\"){\n      setServerError(result);\n    } \n    else if (Array.isArray(result.data)){\n      setSearchResult(result.data);\n    }\n\n    console.log(searchResult);\n\n  };\n\n  return (\n    <div className=\"App\">\n      <Search onSearchSubmit={onSearchSubmit} search = {search} handleSearchChange = {handleSearchChange}/>\n      <ListPortfolio portfolioValues={portfolioValues} onPortfolioDelete={onPortfolioDelete} />\n      <CardList searchResults = {searchResult} onPortfolioCreate={onPortfolioCreate}/>\n\n      {serverError && <div>Unable to connect to API </div>}\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAAsCA,QAAQ,QAAQ,OAAO;AAC7D,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,MAAM,MAAM,4BAA4B;AAE/C,SAASC,eAAe,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,oDAAoD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEX,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAC/C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAW,EAAE,CAAC;EACpE,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAkB,EAAE,CAAC;EACrE,MAAK,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EAEpE,MAAMiB,kBAAkB,GAAIC,CAAgC,IAAK;IAC/DR,SAAS,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACzBC,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;EAChB,CAAC;EAED,MAAMK,iBAAiB,GAAIL,CAAM,IAAK;IACpCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,MAAMC,MAAM,GAAGd,eAAe,CAACe,IAAI,CAAEN,KAAK,IAAKA,KAAK,KAAKF,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC;IAC3E,IAAGK,MAAM,EAAE;IACX,MAAME,eAAe,GAAG,CAAC,GAAGhB,eAAe,EAAEO,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC;IAC/DR,kBAAkB,CAACe,eAAe,CAAC;IACnCN,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;EAChB,CAAC;EAED,MAAMU,iBAAiB,GAAIV,CAAO,IAAK;IACrCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,MAAMK,OAAO,GAAGlB,eAAe,CAACmB,MAAM,CAAEV,KAAK,IAAK;MAChD,OAAOA,KAAK,IAAIF,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK;IACnC,CAAC,CAAC;IACFR,kBAAkB,CAACiB,OAAO,CAAC;EAE3B,CAAC;EAEH,MAAME,cAAc,GAAG,MAAOb,CAAiB,IAAK;IAClDA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,MAAMQ,MAAM,GAAG,MAAM7B,eAAe,CAACM,MAAM,CAAC;IAC5C,IAAG,OAAOuB,MAAM,KAAK,QAAQ,EAAC;MAC5BhB,cAAc,CAACgB,MAAM,CAAC;IACxB,CAAC,MACI,IAAIC,KAAK,CAACC,OAAO,CAACF,MAAM,CAACG,IAAI,CAAC,EAAC;MAClCrB,eAAe,CAACkB,MAAM,CAACG,IAAI,CAAC;IAC9B;IAEAd,OAAO,CAACC,GAAG,CAACT,YAAY,CAAC;EAE3B,CAAC;EAED,oBACEP,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB/B,OAAA,CAACJ,MAAM;MAAC6B,cAAc,EAAEA,cAAe;MAACtB,MAAM,EAAIA,MAAO;MAACQ,kBAAkB,EAAIA;IAAmB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrGnC,OAAA,CAACF,aAAa;MAACO,eAAe,EAAEA,eAAgB;MAACiB,iBAAiB,EAAEA;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzFnC,OAAA,CAACL,QAAQ;MAACyC,aAAa,EAAI7B,YAAa;MAACU,iBAAiB,EAAEA;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAE/E1B,WAAW,iBAAIT,OAAA;MAAA+B,QAAA,EAAK;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjD,CAAC;AAEV;AAACjC,EAAA,CAtDQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}